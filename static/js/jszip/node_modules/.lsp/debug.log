Hello - from /home/manu/.vscode/extensions/jaredly.reason-vscode-1.7.0/bin.native.linux
Previous log location: /tmp/lsp.log
Sending notification {"jsonrpc": "2.0", "method": "client/registerCapability", "params": {"registrations": [{"id": "watching", "method": "workspace/didChangeWatchedFiles", "registerOptions": {"watchers": [{"globPattern": "**/bsconfig.json", "globPattern": "**/.merlin"}]}}]}}
Sending response {"id": 0, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 1, "hoverProvider": true, "completionProvider": {"resolveProvider": true, "triggerCharacters": ["."]}, "signatureHelpProvider": {"triggerCharacters": ["("]}, "definitionProvider": true, "typeDefinitionProvider": true, "referencesProvider": true, "documentSymbolProvider": true, "codeActionProvider": true, "executeCommandProvider": {"commands": ["reason-language-server.add_to_interface_inner"]}, "codeLensProvider": {"resolveProvider": true}, "documentHighlightProvider": true, "documentRangeFormattingProvider": true, "documentFormattingProvider": true, "documentFormattingProvider": true, "renameProvider": true}}}
Read message 
{"jsonrpc":"2.0","method":"initialized","params":{}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","format_width":80,"per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":true,"useOldDuneProcess":true}}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/manu/Documentos/irit/learn-ocaml-o/demo-repository/exercises/demo/test.ml","languageId":"ocaml","version":1,"text":"open Test_lib\nopen Report\n\nlet () =\n  set_result @@\n  ast_sanity_check code_ast @@ fun () ->\n  [ Section\n      ([ Text \"Function:\" ; Code \"plus\" ],\n       test_function_2_against_solution\n         [%ty : int -> int -> int ] \"plus\"\n         [ (1, 1) ; (2, 2) ; (10, -10) ]) ;\n    Section\n      ([ Text \"Function:\" ; Code \"minus\" ],\n       test_function_2_against_solution\n         [%ty : int -> int -> int ] \"minus\"\n         [ (1, 1) ; (4, -2) ; (0, 10) ]) ;\n    Section\n      ([ Text \"Function:\" ; Code \"times\" ],\n       test_function_2_against_solution\n         [%ty : int -> int -> int ] \"times\"\n         [ (1, 3) ; (2, 4) ; (3, 0) ]) ;\n    Section\n      ([ Text \"Function:\" ; Code \"divide\" ],\n       test_function_2_against_solution\n         [%ty : int -> int -> int ] \"divide\"\n         [ (12, 4) ; (12, 5) ; (3, 0) ]) ]\n"}}}
Found a `dune` file at /home/manu/Documentos/irit/learn-ocaml-o
]] Making a new jbuilder package at /home/manu/Documentos/irit/learn-ocaml-o
=== Project root: /home/manu/Documentos/irit/learn-ocaml-o
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/manu/Documentos/irit/learn-ocaml-o/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":1,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/manu/Documentos/irit/learn-ocaml-o/demo-repository/exercises/demo/test.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00596046447754ms
Found a `dune` file at /home/manu/Documentos/irit/learn-ocaml-o
]] Making a new jbuilder package at /home/manu/Documentos/irit/learn-ocaml-o
=== Project root: /home/manu/Documentos/irit/learn-ocaml-o
Detected `opam` dependency manager for local use
Sending response {"id": 1, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/manu/Documentos/irit/learn-ocaml-o/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":2,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/manu/Documentos/irit/learn-ocaml-o/demo-repository/exercises/demo/test.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00500679016113ms
Found a `dune` file at /home/manu/Documentos/irit/learn-ocaml-o
]] Making a new jbuilder package at /home/manu/Documentos/irit/learn-ocaml-o
=== Project root: /home/manu/Documentos/irit/learn-ocaml-o
Detected `opam` dependency manager for local use
Sending response {"id": 2, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/manu/Documentos/irit/learn-ocaml-o/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":3,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/manu/Documentos/irit/learn-ocaml-o/demo-repository/exercises/demo/test.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00500679016113ms
Found a `dune` file at /home/manu/Documentos/irit/learn-ocaml-o
]] Making a new jbuilder package at /home/manu/Documentos/irit/learn-ocaml-o
=== Project root: /home/manu/Documentos/irit/learn-ocaml-o
Detected `opam` dependency manager for local use
Sending response {"id": 3, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /home/manu/Documentos/irit/learn-ocaml-o/.merlin", "command": ""}}]}
Found a `dune` file at /home/manu/Documentos/irit/learn-ocaml-o
]] Making a new jbuilder package at /home/manu/Documentos/irit/learn-ocaml-o
=== Project root: /home/manu/Documentos/irit/learn-ocaml-o
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///home/manu/Documentos/irit/learn-ocaml-o/demo-repository/exercises/demo/test.ml"}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/manu/.cache/.fr-OMBpBy/test.ml","languageId":"ocaml","version":1,"text":"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"}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":4,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/manu/.cache/.fr-OMBpBy/test.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00786781311035ms
Sending response {"id": 4, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":5,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/manu/.cache/.fr-OMBpBy/test.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00596046447754ms
Sending response {"id": 5, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":6,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/manu/.cache/.fr-OMBpBy/test.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00691413879395ms
Sending response {"id": 6, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":7,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/manu/.cache/.fr-OMBpBy/test.ml"},"position":{"line":0,"character":27}}}
[server] Got a method textDocument/hover
[server] processing took 0.00691413879395ms
Sending response {"id": 7, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///home/manu/.cache/.fr-OMBpBy/test.ml"}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/manu/.cache/.fr-vgvPtT/test.ml","languageId":"ocaml","version":1,"text":"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"}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":8,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/manu/.cache/.fr-vgvPtT/test.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00190734863281ms
Sending response {"id": 8, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":9,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/manu/.cache/.fr-vgvPtT/test.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00190734863281ms
Sending response {"id": 9, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":10,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/manu/.cache/.fr-vgvPtT/test.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00596046447754ms
Sending response {"id": 10, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///home/manu/.cache/.fr-vgvPtT/test.ml"}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/manu/.cache/.fr-WfSyJ8/test.ml","languageId":"ocaml","version":1,"text":"open Test_lib\nopen Learnocaml_report;;\n\nlet avoid_thentrue = let already = ref false in fun _ ->\n    if !already then [] else begin\n      already := true ;\n      Learnocaml_report.[ Message ([ Text \"* Do not write the following code patterns:\";\n                                     Code \"[if ... then true else ...;\n if ... then false else ...;\n if ... then ... else true;\n if ... then ... else false]\"; Text \"\nPreferably use Boolean operators (&&), (||), not.\"], Success ~-4) ]\n    end\n\nlet check_thentrue e =\n  Parsetree.(\n    match e with\n    | {pexp_desc = Pexp_ifthenelse (_, e1, (Some e2))} ->\n        begin\n          match e1 with\n          | {pexp_desc = Pexp_construct ({Asttypes.txt = (Longident.Lident \"false\")}, None)}\n          | {pexp_desc = Pexp_construct ({Asttypes.txt = (Longident.Lident \"true\")}, None)} ->\n              avoid_thentrue e1\n          | _ -> []\n        end @ begin\n          match e2 with\n          | {pexp_desc = Pexp_construct ({Asttypes.txt = (Longident.Lident \"false\")}, None)}\n          | {pexp_desc = Pexp_construct ({Asttypes.txt = (Longident.Lident \"true\")}, None)} ->\n              avoid_thentrue e2\n          | _ -> []\n        end\n    | _ -> [])\n\nlet avoid_list1app = let already = ref false in fun _ ->\n    if !already then [] else begin\n      already := true ;\n      Learnocaml_report.[ Message ([ Text \"* Do not write:\";\n                                     Code \"[x] @ l\";\n                                     Text \". Preferably write:\";\n                                     Code \"x :: l\";\n                                     Text \".\"], Success ~-4) ]\n    end\n\nlet check_list1app e =\n  Parsetree.(\n    match e.pexp_desc with\n    | Pexp_apply (app0, [(_, lst1); _]) ->\n        (match app0.pexp_desc, lst1.pexp_desc with\n         | Pexp_ident {Asttypes.txt = app0'},\n           Pexp_construct ({Asttypes.txt = (Longident.Lident \"::\")}, Some lst1')\n           when List.mem (Longident.flatten app0') [[\"List\"; \"append\"]; [\"@\"]] ->\n             (match lst1'.pexp_desc with\n              | Pexp_tuple [_; nil0] ->\n                  (match nil0.pexp_desc with\n                   | Pexp_construct ({Asttypes.txt = (Longident.Lident \"[]\")}, None) ->\n                       avoid_list1app e\n                   | _ -> [])\n              | _ -> [])\n         | _ -> [])\n    | _ -> [])\n\nlet avoid_eqphy = let already = ref false in fun _ ->\n    if !already then [] else begin\n      already := true ;\n      Learnocaml_report.[ Message ([ Text \"*  Do not use physical equality\";\n                                     Code \"(==)\";\n                                     Text \". Preferably use structural equality\";\n                                     Code \"(=)\";\n                                     Text \".\"], Success ~-1) ]\n    end\n\nlet avoid_neqphy = let already = ref false in fun _ ->\n    if !already then [] else begin\n      already := true ;\n      Learnocaml_report.[ Message ([ Text \"* Do not use physical inequality\";\n                                     Code \"(!=)\";\n                                     Text \". Preferably use structural inequality\";\n                                     Code \"(<>)\";\n                                     Text \".\"], Success ~-1) ]\n    end\n\nlet check_eqphy e =\n  Parsetree.(\n    match e.pexp_desc with\n    | Pexp_ident {Asttypes.txt = Longident.Lident \"==\"} -> avoid_eqphy e\n    | _ -> [])\n\nlet check_neqphy e =\n  Parsetree.(\n    match e.pexp_desc with\n    | Pexp_ident {Asttypes.txt = Longident.Lident \"!=\"} -> avoid_neqphy e\n    | _ -> [])\nlet ast_imperative_check ast =\n  let chk_expr e =\n    Parsetree.(\n      match e with\n      | {pexp_desc = Pexp_sequence _} -> forbid_syntax \";\" e\n      | {pexp_desc = Pexp_while _} -> forbid_syntax \"while\" e\n      | {pexp_desc = Pexp_for _} -> forbid_syntax \"for\" e\n      | {pexp_desc = Pexp_array _} -> forbid_syntax \"array\" e\n      | _ -> [] ) in\n  let imperative_report =\n    ast_check_structure\n      ~on_expression:chk_expr\n      ast |> List.sort_uniq compare in\n  if snd (Learnocaml_report.result imperative_report) then\n    imperative_report\n  else\n    []\n\nlet ast_quality ast =\n  let imperative_report =\n    let tempReport = ast_imperative_check ast in\n    if tempReport = [] then []\n    else (Message ([ Text \"Imperative features have been detected:\" ],\n                   Success ~-4)) :: tempReport\n                  \n  and report =\n    let tempReport = ast_check_structure\n        ~on_expression:(check_thentrue @@@ check_list1app @@@\n                        check_eqphy @@@ check_neqphy)\n        ast |> List.sort_uniq compare in\n    if tempReport = [] then []\n    else (Message ([Text \"Unwanted code patterns have been detected:\"],\n                   Failure)) :: tempReport\n                  \n  in if imperative_report = [] && report = []\n  then [ Message ([ Text \"OK (no prohibited construction detected)\"], Success 0) ]\n  else imperative_report @ report;;\n\nlet question0 =\n  let prot = last_ty [%ty:bool] [%ty: bool] in\n  test_function_against_solution ~gen:(5) prot\n    \"f\"\n    [];;\n \nlet question1 =\n  let prot = last_ty [%ty:int] [%ty: int] in\n  test_function_against_solution ~gen:(5) prot\n    \"f\"\n    [];;\n \nlet () =\n  set_result @@\n  ast_sanity_check code_ast @@ fun () ->\n  [\n    Section ([ Text \"Code quality:\" ], ast_quality code_ast);\n    Section ([ Text \"Fonction:\" ; Code \"f\" ], question0 );\n    Section ([ Text \"Fonction:\" ; Code \"f\" ], question1 );\n  ]"}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":11,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/manu/.cache/.fr-WfSyJ8/test.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00190734863281ms
Sending response {"id": 11, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":12,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/manu/.cache/.fr-WfSyJ8/test.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00286102294922ms
Sending response {"id": 12, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":13,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/manu/.cache/.fr-WfSyJ8/test.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00309944152832ms
Sending response {"id": 13, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":14,"method":"shutdown","params":null}
Sending response {"id": 14, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"exit","params":null}
Got exit! Terminating loop
Finished
